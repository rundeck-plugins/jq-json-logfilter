import org.gradle.api.tasks.testing.Test

plugins {
    id 'groovy'
    id 'java'
    id 'pl.allegro.tech.build.axion-release' version '1.13.4'
    id 'maven-publish'
}

group 'com.rundeck.plugin'

ext.rundeckVersion='5.0.0-20231216'
defaultTasks 'clean','build'
apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.11
ext.rundeckPluginVersion= '1.2'

scmVersion {
    ignoreUncommittedChanges = false
    tag {
        prefix = ''
        versionSeparator = ''
        def origDeserialize=deserialize
        //apend .0 to satisfy semver if the tag version is only X.Y
        deserialize = { config, position, tagName ->
            def orig = origDeserialize(config, position, tagName)
            if (orig.split('\\.').length < 3) {
                orig += ".0"
            }
            orig
        }
    }
}
project.version = scmVersion.version

/**
 * Set this to a comma-separated list of full classnames of your implemented Rundeck
 * plugins.
 */
ext.pluginClassNames='com.rundeck.plugins.logging.JsonLogFilter'


repositories {
    mavenLocal()
    mavenCentral()
}

configurations{
    //declare custom pluginLibs configuration to include only libs for this plugin
    pluginLibs

    //declare compile to extend from pluginLibs so it inherits the dependencies
    implementation{
        extendsFrom pluginLibs
    }
}


dependencies {
    implementation 'org.codehaus.groovy:groovy-all:3.0.19'

    implementation group: 'org.rundeck', name: 'rundeck-core', version: rundeckVersion

    pluginLibs (group: 'net.thisptr', name: 'jackson-jq', version: '1.0.0-preview.20230409') {
       exclude group: "com.fasterxml.jackson.core"
    }

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation "org.spockframework:spock-core:2.0-groovy-3.0"
}


// task to copy plugin libs to output/lib dir
task copyToLib(type: Copy) {
    into "$buildDir/output/lib"
    from configurations.pluginLibs
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
}

jar {
    from "$buildDir/output"
    manifest {
        def libList = configurations.pluginLibs.collect{'lib/'+it.name}.join(' ')
        attributes 'Rundeck-Plugin-Name' : 'jq Json Log Filter'
        attributes 'Rundeck-Plugin-Description' : 'This plugin maps a JSON String output from a step to key/value context variables.'
        attributes 'Rundeck-Plugin-Rundeck-Compatibility-Version': '3.0.6+'
        attributes 'Rundeck-Plugin-Tags': 'java,json,log filter'
        attributes 'Rundeck-Plugin-License': 'Apache 2.0'
        attributes 'Rundeck-Plugin-Source-Link': 'https://github.com/rundeck-plugins/jq-json-logfilter'
        attributes 'Rundeck-Plugin-Target-Host-Compatibility': 'all'
        attributes 'Rundeck-Plugin-Classnames': pluginClassNames
        attributes 'Rundeck-Plugin-File-Version': version
        attributes 'Rundeck-Plugin-Version': rundeckPluginVersion, 'Rundeck-Plugin-Archive': 'true'
        attributes 'Rundeck-Plugin-Libs': "${libList}"
        attributes 'Main-Class': "com.rundeck.plugins.logging.JsonLogFilter"
        attributes 'Class-Path': "${libList} lib/rundeck-core-${rundeckVersion}.jar"
    }
}
//set jar task to depend on copyToLib
jar.dependsOn(copyToLib)

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = 'jq-json-logfilter'
            from components.java
        }
    }
}